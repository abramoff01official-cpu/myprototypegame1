extends Area2D

@export var speed: float = 600.0
var direction: Vector2 = Vector2.ZERO
var damage: int = 10

@onready var sprite: Sprite2D = $Sprite2D

func _ready() -> void:
	add_to_group("Arrow")
	connect("body_entered", Callable(self, "_on_body_entered"))

	# üîÑ –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–ø—Ä–∞–π—Ç –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—ë—Ç–∞
	if direction != Vector2.ZERO:
		rotation = direction.angle()

func _physics_process(delta: float) -> void:
	if direction == Vector2.ZERO:
		return

	position += direction * speed * delta

	# –ï—Å–ª–∏ —Å—Ç—Ä–µ–ª–∞ –≤—ã—à–ª–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞ ‚Äî —É–¥–∞–ª–∏—Ç—å
	if not get_viewport_rect().has_point(global_position):
		queue_free()

func _on_body_entered(body):
	# üí• –ï—Å–ª–∏ –ø–æ–ø–∞–ª–∞ –≤–æ –≤—Ä–∞–≥–∞
	if body.is_in_group("Enemy"):
		if body.has_method("take_damage"):
			body.take_damage(damage, global_position)

			# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–∏—Ñ—Ä—ã —É—Ä–æ–Ω–∞
			var player = get_tree().get_first_node_in_group("Player")
			if player and player.has_method("show_enemy_damage"):
				player.show_enemy_damage(damage, body.global_position)

		queue_free()

	# üö´ –ù–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –∏–≥—Ä–æ–∫–æ–º –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–µ–ª–∞–º–∏
	elif body.is_in_group("Player") or body.is_in_group("Arrow"):
		return

	else:
		# –ü–æ–ø–∞–ª–∞ –≤ —Å—Ç–µ–Ω—É –∏–ª–∏ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç ‚Äî —É–Ω–∏—á—Ç–æ–∂–∞–µ–º
		queue_free()
